openapi: 3.0.3
info:
  title: Adaptive Network Lab API
  description: |-
    Dokumentasi lengkap mengenai semua API yang ada
  version: 1.0.1
servers:
  - url: https://api.adaptivenetlab.site/v1
tags:
  - name: User Dashboard
    description: Dashboard User
  - name: Landing Page
    description: Landing Page Editor
  - name: Active Member
    description: Active Member Page
  - name: Prestasi
    description: To Do Next
  - name: Alumni
    description: To Do Next
  - name: Kegiatan
    description: To Do Next
paths:
  /dashboard/active-member/:
    post:
      security:
        - AuthToken: []
      tags: 
        - Active Member
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/activemember'
      responses:
        '201':
          description: Success
          content:
            application/json:
              example:
                {
                  "status": "success",
                  "message": "Tentang Kami berhasil ditambahkan",
                  "data": {
                    "uid": "6a99ef60-8282-40f5-9294-2f3dc3c9e979",
                    "judul": "Tentang Kami",
                    "isi": "Lorem Ipsum Dolor",
                    "updateAt": null,
                    "createdAt": "2023-03-24T22:11:41.147Z"
                  }
                }
        '400':
          $ref: '#/components/responses/Unauthorized'
        '500':
          description: test123
    get:
      security:
        - AuthToken: []
      tags: 
        - Active Member
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                {
                  "status": "success",
                  "message": "Tentang Kami berhasil ditampilkan",
                  "data": {
                    "uid": "6a99ef60-8282-40f5-9294-2f3dc3c9e979",
                    "judul": "Tentang Kami",
                    "isi": "Lorem Ipsum Dolor",
                    "updateAt": null,
                    "createdAt": "2023-03-24T22:11:41.147Z"
                  }
                }
        '400':
          $ref: '#/components/responses/Unauthorized'
        '500':
          description: test123
  /dashboard/active-member/{uid}:
    get:
      security:
        - AuthToken: []
      tags: 
        - Active Member
    put:
      security:
        - AuthToken: []
      tags: 
        - Active Member
    delete:
      security:
        - AuthToken: []
      tags: 
        - Active Member
  /dashboard/landing-page-editor/tentang-kami:
    post:
      security:
        - AuthToken: []
      tags: 
        - Landing Page
      summary: Landing Page Tentang Kami
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tentangkami'
      responses:
        '201':
          description: created
          content:
            application/json:
              example:
                {
                  "status": "success",
                  "message":"Tentang Kami berhasil ditambahkan",
                  "data": {
                    "uid": "6a99ef60-8282-40f5-9294-2f3dc3c9e979",
                    "judul": "Tentang Kami",
                    "isi": "Lorem Ipsum Dolor",
                    "updateAt": null,
                    "_id": "641e1e8528c5e43a7df6e728",
                    "createdAt": "2023-03-24T22:04:53.917Z"
                  }
                }
        '500':
          description: error
    get:
      security:
        - AuthToken: []
      tags: 
        - Landing Page
      summary: Landing Page Tentang Kami
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                {
                  "status": "success",
                  "message": "Tentang Kami berhasil ditampilkan",
                  "data": {
                    "uid": "6a99ef60-8282-40f5-9294-2f3dc3c9e979",
                    "judul": "Tentang Kami",
                    "isi": "Lorem Ipsum Dolor",
                    "updateAt": null,
                    "createdAt": "2023-03-24T22:11:41.147Z"
                  }
                }
        '400':
          $ref: '#/components/responses/Unauthorized'
        '500':
          description: test123
  /dashboard/landing-page-editor/tentang-kami/{uid}:
    put:
      tags: 
        - Landing Page
      summary: Perbarui Data Berdasarkan ID
      security:
        - AuthToken: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tentangkami'
      parameters:
        - in: path
          name: uid
          required: true
          schema:
            type: string
          description: UID
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                {
                  "status": "success",
                  "message": "Tentang Kami berhasil diubah",
                }
        '404':
          description: User not found
          content:
            application/json:
              example:
                {
                  "status": "success",
                  "message": "Tentang Kami tidak ditemukan"
                }
    delete:
      tags: 
        - Landing Page
      summary: Hapus data berdasarkan ID
      security:
        - AuthToken: []
      parameters:
        - in: path
          name: uid
          required: true
          schema:
            type: string
          description: UID
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                {
                  "success": "success",
                  "message": "Tentang Kami berhasil dihapus"
                }   
        '404':
          description: UID not found
          content:
            application/json:
              example:
                {
                  "status": "success",
                  "message": "Tentang Kami tidak ditemukan"
                }
  /dashboard/landing-page-editor/tentang-kami-sejarah:
    post:
      tags: 
        - Landing Page
      summary: Landing Page Sejarah Lab
      security:
        - AuthToken: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/tentangkamisejarah'
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                {
                  "status": "success",
                  "message": "Tentang Kami berhasil ditampilkan",
                  "data": {
                    "uid": "6a99ef60-8282-40f5-9294-2f3dc3c9e979",
                    "judul": "Tentang Kami",
                    "isi": "Lorem Ipsum Dolor",
                    "updateAt": null,
                    "createdAt": "2023-03-24T22:11:41.147Z"
                  }
                }
        '400':
          $ref: '#/components/responses/Unauthorized'
        '500':
          description: test123
    get:
      tags: 
        - Landing Page
      summary: Landing Page Sejarah Lab
      security:
        - AuthToken: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                {
                  "status": "success",
                  "message": "Tentang Kami Sejarah berhasil ditampilkan",
                  "data": {
                    "uid": "641449298fc28ccb4f548c5d",
                    "judul": "e8e59d4c-d929-4b7e-afe7-632efd8bec30",
                    "isi": "Naoval Annasik",
                    "tahun": "2020",
                    "imageUrl": "url//",
                    "createdAt": "2023-03-17T11:04:09.588Z",
                    "updatedAt": null
                  }
                }
        '400':
          $ref: '#/components/responses/Unauthorized'
        '500':
          description: test123
  /dashboard/landing-page-editor/tentang-kami-sejarah/{uid}:
    put:
      tags: 
        - Landing Page
      summary: Perbarui Data Berdasarkan ID
      security:
        - AuthToken: []
      parameters:
        - in: path
          name: uid
          required: true
          schema:
            type: string
          description: UID dari user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/tentangkamisejarah'
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                {
                  "success": "success",
                  "message": "Tentang Kami Sejarah berhasil diubah"
                }   
        '404':
          description: UID Not Found
          content:
            application/json:
              example:
                {
                  "success": "error",
                  "message": "Uid tidak ditemukan"
                }
        '500':
          description: error
          content:
            application/json:
              example:
                {
                  "success": "error",
                  "message": "Uid tidak ditemukan"
                }
    delete:
      tags: 
        - Landing Page
      summary: Hapus data berdasarkan ID
      security:
        - AuthToken: []
      parameters:
        - in: path
          name: uid
          required: true
          schema:
            type: string
          description: UID dari user
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                {
                  "success": "success",
                  "message": "Tentang Kami Sejarah berhasil dihapus"
                }   
        '404':
          description: UID Not Found
          content:
            application/json:
              example:
                {
                  "success": "error",
                  "message": "Tentang Kami Sejarah tidak ditemukan"
                }
        '500':
          description: error
          content:
            application/json:
              example:
                {
                  "success": "error",
                  "message": "error message"
                }
  /dashboard/landing-page-editor/struktur-organisasi:
    post:
      tags: 
        - Landing Page
      summary: Landing Page Struktur Organisasi
      security:
        - AuthToken: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/tentangkamisejarah'
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                {
                  "status": "success",
                  "message": "Tentang Kami berhasil ditampilkan",
                  "data": {
                    "uid": "6a99ef60-8282-40f5-9294-2f3dc3c9e979",
                    "judul": "Tentang Kami",
                    "isi": "Lorem Ipsum Dolor",
                    "updateAt": null,
                    "createdAt": "2023-03-24T22:11:41.147Z"
                  }
                }
        '400':
          $ref: '#/components/responses/Unauthorized'
        '500':
          description: test123
    get:
      tags: 
        - Landing Page
      summary: Landing Page Struktur Organisasi
      security:
        - AuthToken: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                {
                  "status": "success",
                  "message": "Tentang Kami Sejarah berhasil ditampilkan",
                  "data": {
                    "uid": "641449298fc28ccb4f548c5d",
                    "judul": "e8e59d4c-d929-4b7e-afe7-632efd8bec30",
                    "isi": "Naoval Annasik",
                    "tahun": "2020",
                    "imageUrl": "url//",
                    "createdAt": "2023-03-17T11:04:09.588Z",
                    "updatedAt": null
                  }
                }
        '400':
          $ref: '#/components/responses/Unauthorized'
        '404':
          description: No Data Found
          content:
            application/json:
              example:
                {
                  "success": "error",
                  "message": "Tidak ada Struktur Organisasi yang tersedia"
                }
        '500':
          description: test123
  /dashboard/landing-page-editor/struktur-organisasi/{uid}:
    get:
      tags: 
        - Landing Page
      summary: List data berdasarkan ID
      parameters:
        - in: path
          name: uid
          required: true
          schema:
            type: string
          description: UID dari data
      security:
        - AuthToken: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                {
                  "status": "success",
                  "message": "Tentang Kami Sejarah berhasil ditampilkan",
                  "data": {
                    "uid": "641449298fc28ccb4f548c5d",
                    "judul": "e8e59d4c-d929-4b7e-afe7-632efd8bec30",
                    "isi": "Naoval Annasik",
                    "tahun": "2020",
                    "imageUrl": "url//",
                    "createdAt": "2023-03-17T11:04:09.588Z",
                    "updatedAt": null
                  }
                }
        '400':
          $ref: '#/components/responses/Unauthorized'
        '404':
          description: No Data Found
          content:
            application/json:
              example:
                {
                  "success": "error",
                  "message": "Tidak ada Struktur Organisasi yang tersedia"
                }
        '500':
          description: test123
    put:
      tags: 
        - Landing Page
      summary: Perbarui Data Berdasarkan ID
    delete:
      tags: 
        - Landing Page
      summary: Hapus data berdasarkan ID
  /dashboard/landing-page-editor/sambutan-pembina:
    post:
      tags: 
        - Landing Page
      summary: Landing Page Sambutan Pembina
    get:
      tags: 
        - Landing Page
      summary: Landing Page Sambutan Pembina
      security:
        - AuthToken: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                {
                  "status": "success",
                  "message": "Sambutan Pembina berhasil ditampilkan",
                  "data": {
                    "uid": "641449298fc28ccb4f548c5d",
                    "judul": "e8e59d4c-d929-4b7e-afe7-632efd8bec30",
                    "isi": "Naoval Annasik",
                    "tahun": "2020",
                    "imageUrl": "url//",
                    "createdAt": "2023-03-17T11:04:09.588Z",
                    "updatedAt": null
                  }
                }
        '400':
          description: Invalid token
        '404':
          description: No Data Found
          content:
            application/json:
              example:
                {
                  "success": "error",
                  "message": "Tidak ada Struktur Organisasi yang tersedia"
                }
  /dashboard/landing-page-editor/sambutan-pembina/{id}:
    get:
      tags: 
        - Landing Page
      summary: List data berdasarkan ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: UID dari data
      security:
        - AuthToken: []
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                {
                  "status": "success",
                  "message": "Sambutan Pembina berhasil ditampilkan",
                  "data": {
                    "uid": "641449298fc28ccb4f548c5d",
                    "judul": "e8e59d4c-d929-4b7e-afe7-632efd8bec30",
                    "isi": "Naoval Annasik",
                    "tahun": "2020",
                    "imageUrl": "url//",
                    "createdAt": "2023-03-17T11:04:09.588Z",
                    "updatedAt": null
                  }
                }
        '400':
          $ref: '#/components/responses/Unauthorized'
        '404':
          description: No Data Found
          content:
            application/json:
              example:
                {
                  "success": "error",
                  "message": "Sambutan Pembina tidak ditemukan"
                }
        '500':
          description: test123
    put:
      tags: 
        - Landing Page
      summary: Perbarui Data Berdasarkan ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: UID dari data
      security:
        - AuthToken: []
    delete:
      tags: 
        - Landing Page
      summary: Hapus data berdasarkan ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: UID dari data
      security:
        - AuthToken: []
  /dashboard/user/login:
    post:
      tags:
        - User Dashboard
      summary: Login akun yang telah terdaftar
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/login'
      responses:
        '201':
          description: created
          content:
            application/json:
              example:
                {
                  "status": "success",
                  "message":"Login berhasil",
                  "data": {
                    "userId": "1",
                    "name": "Naoval Annasik",
                    "username": "annasiknvl",
                    "email": "annasiknvl@example.com",
                    "roleId": 1,
                    "token": "token-here"
                  }
                }
  /dashboard/user/register:
    post:
      tags:
        - User Dashboard
      summary: Buat dan daftar akun baru
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/register'
      responses:
        '201':
          description: created
          content:
            application/json:
              example:
                {
                  "status": "success",
                  "message":"User berhasil ditambahkan",
                  "data": {
                    "userId": "1",
                    "name": "Naoval Annasik",
                    "username": "annasiknvl",
                    "email": "annasiknvl@example.com",
                    "roleId": 1,
                    "createdAt": "userSaved.createdAt",
                    "updatedAt": "userSaved.updatedAt"
                  }
                }
        '400':
          description: Bad Request
        '409':
          description: Conflict
          content:
            application/json:
              examples:
                emailExist:
                  value:
                    {
                      message: "Email already exists"
                    }
                usernameExist:
                  value:
                    {
                      message: "Username already exists"
                    }
  /dashboard/user/:
    get:
      security:
        - AuthToken: []
      tags:
        - User Dashboard
      summary: Daftar akun yang terdaftar
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                {
                  "status": "success",
                  "message": "Daftar user berhasil didapatkan",
                  "data": {
                    "_id": "641449298fc28ccb4f548c5d",
                    "userId": "e8e59d4c-d929-4b7e-afe7-632efd8bec30",
                    "name": "Naoval Annasik",
                    "username": "annasiknvl",
                    "password": "$2b$10$FpiVDEbcTci2kV9hcgaTwex./eyBDrUoOPtzSMjZU5I93qIutgJQ2",
                    "email": "annasiknvl@example.com",
                    "roleId": 1,
                    "createdAt": "2023-03-17T11:04:09.588Z",
                    "updatedAt": null
                  }
                }
        '400':
          $ref: '#/components/responses/Unauthorized'
  /dashboard/user/{userId}:
    get:
      security:
        - AuthToken: []
      tags:
        - User Dashboard
      summary: Melihat detail user berdasarkan ID
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
          description: ID dari user
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                {
                  "status": "success",
                  "message": "User berhasil didapatkan",
                  "data": {
                    "_id": "641449298fc28ccb4f548c5d",
                    "userId": "e8e59d4c-d929-4b7e-afe7-632efd8bec30",
                    "name": "Naoval Annasik",
                    "username": "annasiknvl",
                    "password": "$2b$10$FpiVDEbcTci2kV9hcgaTwex./eyBDrUoOPtzSMjZU5I93qIutgJQ2",
                    "email": "annasiknvl@example.com",
                    "roleId": 1,
                    "createdAt": "2023-03-17T11:04:09.588Z",
                    "updatedAt": null
                  }
                }
        '404':
          description: User not found
    put:
      security:
        - AuthToken: []
      tags:
        - User Dashboard
      summary: Memperbarui detail user berdasarkan ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/register'
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
          description: ID dari user
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                {
                  "status": "success",
                  "message": "User berhasil diupdate",
                }
        '404':
          description: User not found
    delete:
      security:
        - AuthToken: []
      tags:
        - User Dashboard
      summary: Menghapus User berdasarkan ID
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: string
          description: ID dari user
      responses:
        '200':
          description: Success
          content:
            application/json:
              example:
                {
                  "success": "success",
                  "message": "User berhasil dihapus"
                }   
        '404':
          description: User not found
components:
  responses:
    Unauthorized:
      description: not authorized to access the resource
      content:
        application/json:
          examples:
            Unauthorized:
              value:
                {
                  "status": "Unauthorized",
                  "message": "No Token, Access denied",
                  "success": false
                }
            invalidToken:
              value:
                {
                  "status": "Unauthorized",
                  "message": "Invalid Token",
                  "success": false
                }
            invalidRole:
              value:
                {
                  "message": "You are not authorized to access this resource",
                  "success": false
                }
  schemas:
    login:
      type: object
      properties:
        username:
          type: string
          example: annasiknvl
        password:
          type: string
          example: 12345678
    register:
      type: object
      properties:
        name:
          type: string
          example: Naoval Annasik
        username:
          type: string
          example: annasiknvl
        password:
          type: string
          example: 12345678
        email:
          type: string
          example: annasiknvl@example.com
        roleId:
          type: string
          example: 1
    tentangkami:
      type: object
      properties:
        judul:
          type: string
          example: Tentang Kami
        isi:
          type: string
          example: Lorem Ipsum Dolor
    tentangkamisejarah:
      type: object
      properties:
        judul:
          type: string
          example: lorem ipsum dolor sit amet
        isi:
          type: string
          example: lorem ipsum
        tahun:
          type: string
          example: 2020
        imageUrl:
          type: string
          format: binary
    activemember:
      type: object
      properties:
        nama:
          type: string
          example: Naoval Annasik
        jabatan:
          type: string
          example: Anggota
        divisi:
          type: string
          example: Riset
        tahunAngkatan:
          type: string
          example: 2020
        imageUrl:
          type: string
          format: binary
  securitySchemes:
    AuthToken:
      type: apiKey
      name: auth-token
      in: header
